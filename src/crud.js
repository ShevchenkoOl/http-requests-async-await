import { Notify } from 'notiflix/build/notiflix-notify-aio';

//Basic operations for interaction with the backend Create, Read, Update and Delete

//-----------------------    READ - GET

// const getAPI = () => {
// return fetch('https://jsonplaceholder.typicode.com/posts/1')
// .then(response => {
//     if(!response.ok) {
//         throw new Error(response.statusText);
// }
//     return response.json()
// });
// };
// getAPI().then(data => console.log(data)); // –≤–∏–∫–ª–∏–∫–∞—î–º –¥–∞–Ω–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é




//-----------------------  CREATE - POST
// –ê–ª–≥–æ—Ä–∏—Ç–º: 1. —Å—Ç–≤–æ—Ä—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é createAPI(), –ø—Ä–æ–ø–∏—Å—É—î–º–æ options, –Ω–∞—Å—Ç—É–ø–Ω—ñ 3 –ø—É–Ω–∫—Ç–∏ —î –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–º–∏:
            // - method;
            // - –∫–ª—é—á body, –≤—ñ–Ω –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–µ –∑–∞ —ñ–Ω—Ñ–æ —â–æ –º–∏ –ø–µ—Ä–µ–¥–∞—î–º–æ –∑ FrontEnd –¥–æ BackEnd, –æ–±–æ–≤—è–∑–∫–æ–≤–æ –º–∞—î–º–æ –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ –≤ JSON (JSON.stringify(object));
            // - –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –ø—Ä–æ–ø–∏—Å—É—î–º–æ headers: {
            //                                     'Content-type': 'application/json; charset=utf-8', ('application/json - —è–∫–∏–º —á–∏–Ω–æ–º –º–∏ –ø–µ—Ä–µ–¥–∞–µ–º —ñ–Ω—Ñ–æ; charset=utf-8') - —Ç–∏–ø  –∫–æ–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ–ø–∏—Å–∞–Ω –≤ HTML
            //                                   }

//–¥–ª—è –ø—Ä–∏–∫–ª–∞–¥—É 1. —Å—Ç–≤–æ—Ä—é—î–º–æ —Ä–µ–∞–ª—å–Ω—ñ –ø–æ—Å—Ç, –¥–ª—è —Ü—å–æ–≥–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –≤ <form> –≤ HTML
const form = document.querySelector('.form');
const list = document.querySelector('.list-posts');
const errorMessage = document.querySelector('.error');

const onSubmit = (evt) => {
evt.preventDefault();
// const {title, body} = evt.currentTarget.elements; //–¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π —Å–≤–æ–π—Å—Ç–≤ title –∏ body –∏–∑ –æ–±—ä–µ–∫—Ç–∞ elements —Ñ–æ—Ä–º—ã

// const object = {
//     title: title.value,
//     body: body.value
// };
// –∞–±–æ –º–∏ –º–æ–∂–µ–º–æ –∑—Ä–æ–±–∏—Ç–∏ –≥–ª–∏–±–æ–∫–µ —Ä—É–π–Ω—É–≤–∞–Ω–Ω—è –æ–±'—î–∫—Ç–∞:
const {
        title: {
               value: title
              },
        body: {
              value: body
            }
        } = evt.currentTarget.elements;

const object = {title, body};
createAPI(object).then(data => createPost(data), //5. –ø—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –º–∞–ª—é—î–º–æ –Ω–∞—à—É —Ä–æ–∑–º—ñ—Ç–∫—É createPost
                               Notify.success('our post was successful added! üòä') // –æ–±—Ä–æ–±–∫–∞ —É—Å–ø—ñ—à–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ Notify
                              //console.log(data), // 3. –≤–∏–∫–ª–∏–∫–∞—î–º  –Ω–∞—à—É —Ñ—É–Ω–∫—Ü—ñ—é                
).catch(err => errorMessage.textContent = "Ooops, I am sorry :( ! üòí") // –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏  –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
}

form.addEventListener('submit', onSubmit);
//2. –¥–∞–Ω—ñ –∑ –Ω–∞—à–æ—ó —Ñ–æ—Ä–º–∏ —Ç—Ä–µ–±–∞ –ø–µ—Ä–µ–¥–∞—Ç–∏ –Ω–∞ HTTP –∑–∞–ø–∏—Ç, –¥–ª—è —Ü—å–æ–≥–æ –≤ –Ω–∞—à—É —Ñ—É–Ω–∫—Ü—ñ—é createAPI() –º–∏ –ø–µ—Ä–µ–¥–∞–µ–º —è–∫–∏—Å data 

// const object = {
//   title: 'hello world',
//   body: 'looreilly',
// };

const createAPI = (data) => {
  const options = {
    method: 'POST',
    body: JSON.stringify(data),
    headers: {
      'Content-type': 'application/json; charset=utf-8',
    }
  };

  return fetch('https://jsonplaceholder.typicode.com/posts', options).then(
    response => {
      console.log(response); //–¥–ª—è –∑–∞–ø–∏—Ç—É POST —î –æ–∫—Ä–µ–º–∏–π —Å—Ç–∞—Ç—É—Å "201"
      if (!response.ok) {
        throw new Error(response.statusText);
      }
      return response.json();
    }
  );
};
//createAPI().then(data => console.log(data));

// // 4. —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç—ñ–≤
// const createPost = ({id, title, body}) => { // —Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î —è–∫—ñ—Å—å –æ–±—ä–µ–∫—Ç (obj), –≤ –¥–∞–Ω–æ–º—É –≤–∏–ø–∞–¥–∫—É –º–∏ –æ—Ç—Ä–∏–º–∞—î–º–æ obj = {id, title, body};
// list.insertAdjacentHTML('beforeend', `
//     <li data-postID="${id}">
//         <h3>${title}</h3>
//         <p>${body}</p>
//     </li>
// `);
// };



//-----------------------UPDATE - PUT/PATCH
const obj = {
    id: "1",
    title: "Hello world!"
};

// const updateAPI = (data) => {
//     const options = {
//             method: 'PATCH',
//             body: JSON.stringify(data),
//             headers: {
//               'Content-type': 'application/json; charset=utf-8',
//             }
//           };
//     return fetch(`https://jsonplaceholder.typicode.com/posts/${data.id}`, options) // data.id - —Ü–µ id —Ç–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å–∏–≤—ñ —è–∫–∏–π –º–∏ –±—É–¥–µ–º–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ 
//     .then(res => {
//         if(!res.ok) {
//             throw new Error(res.statusText);
//         }
//         return res.json();
//     })
// };

// updateAPI(obj).then(data => console.log(data));

// const updateAPI = (data) => {
//     const options = {
//             method: 'PUT',
//             body: JSON.stringify(data),
//             headers: {
//               'Content-type': 'application/json; charset=utf-8',
//             }
//           };
//     return fetch(`https://jsonplaceholder.typicode.com/posts/${data.id}`, options) // data.id - —Ü–µ id —Ç–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å–∏–≤—ñ —è–∫–∏–π –º–∏ –±—É–¥–µ–º–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ 
//     .then(res => {
//         if(!res.ok) {
//             throw new Error(res.statusText);
//         }
//         return res.json();
//     })
// };

// updateAPI(obj).then(data => console.log(data));
// //–ø—Ä–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ –º–µ—Ç–æ–¥—É PUT –≤—Å–µ —Å—Ç–∞—Ä–µ –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ, –∫—Ä—ñ–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤, —ñ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–æ



//----------------------- DELETE - DELETE

// const deleteAPI = (id) => {
//         const options = {
//                 method: 'DELETE',
//               };

//         return fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, options) // data.id - —Ü–µ id —Ç–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å–∏–≤—ñ —è–∫–∏–π –º–∏ –±—É–¥–µ–º–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ 
//         .then(res => {
//             if(!res.ok) {
//                 throw new Error(res.statusText);
//             }
//             return res.json();
//         })
//         .catch(err => console.log(err));
//     };
    
//     deleteAPI(1) // –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –∑–∞–ø–∏—Ç—É delete, –Ω–∞–º –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –ø—É—Å—Ç–∏ –æ–±'—î–∫—Ç, —Ç–æ–º—É .then(data => console.log(data)); –ø–µ—Ä–µ–≤—ñ–∫—É –º–∏ —Ä–æ–±–∏–º–æ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω–∂–æ –≤ —Ñ—É–Ω–∫—Ü—ñ—ó